name: Deploy to Windows Server (MERN + IIS + PM2)

on:
  push:
    branches:
      - develop
      - testing
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Detect target environment based on branch
      - name: Detect target environment
        id: env
        run: |
          if [[ "${GITHUB_REF##*/}" == "develop" ]]; then
            echo "env=development" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF##*/}" == "testing" ]]; then
            echo "env=testing" >> $GITHUB_OUTPUT
          else
            echo "env=production" >> $GITHUB_OUTPUT

      # Step 3: Zip backend & frontend folders
      - name: Zip backend
        run: |
          cd Ticketing-Management-System-Backend-
          zip -r ../backend.zip ./*

      - name: Zip frontend
        run: |
          cd Ticketing-Management-System-Frontend
          zip -r ../frontend.zip ./*

      # Step 4: Upload backend & frontend zips to Windows server
      - name: Upload backend & frontend zips
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST_PSBA_TICKETING }}
          username: ${{ secrets.SERVER_USER_PSBA_TICKETING }}
          password: ${{ secrets.SERVER_PASSWORD_PSBA_TICKETING }}
          port: 22
          source: "backend.zip,frontend.zip"
          target: "C:/github/ticketing-system/${{ steps.env.outputs.env }}/psba-ticket-management-portal"
          rm: true
          overwrite: true
          debug: true

      # Step 5: Unzip folders on Windows server via PowerShell
      - name: Unzip backend & frontend on server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST_PSBA_TICKETING }}
          username: ${{ secrets.SERVER_USER_PSBA_TICKETING }}
          password: ${{ secrets.SERVER_PASSWORD_PSBA_TICKETING }}
          port: 22
          script: |
            $target = "C:/github/ticketing-system/${{ steps.env.outputs.env }}/psba-ticket-management-portal"
            # Remove existing folders
            Remove-Item -Recurse -Force "$target/Backend" -ErrorAction SilentlyContinue
            Remove-Item -Recurse -Force "$target/Frontend" -ErrorAction SilentlyContinue
            # Unzip uploaded files
            Expand-Archive -Force "$target/backend.zip" "$target/Backend"
            Expand-Archive -Force "$target/frontend.zip" "$target/Frontend"
            # Remove zip files after extraction
            Remove-Item "$target/backend.zip"
            Remove-Item "$target/frontend.zip"
