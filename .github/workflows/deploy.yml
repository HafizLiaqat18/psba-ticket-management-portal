name: Deploy to Windows Server (MERN + IIS + PM2)

on:
  push:
    branches:
      - develop
      - testing
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Detect target environment (based on branch)
      - name: Detect target environment
        id: env
        run: |
          if [[ "${GITHUB_REF##*/}" == "develop" ]]; then
            echo "env=development" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF##*/}" == "testing" ]]; then
            echo "env=testing" >> $GITHUB_OUTPUT
          else
            echo "env=production" >> $GITHUB_OUTPUT
          fi

      # Step 3: Prepare deployment folder (avoid permission errors)
      - name: Prepare deployment folder
        run: |
          mkdir -p deploy
          rsync -av --no-perms --no-owner --no-group \
            --exclude='node_modules' \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='*.log' \
            --exclude='.env*' \
            ./ deploy/

      # Step 4: Upload files to Windows server using password auth
      - name: Upload files to server (password auth)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST_PSBA_TICKETING }}
          username: ${{ secrets.SERVER_USER_PSBA_TICKETING }}
          password: ${{ secrets.SERVER_PASSWORD_PSBA_TICKETING }}
          port: 22
          source: "./deploy/*"
          target: "C:/github/ticketing-system/${{ steps.env.outputs.env }}/psba-ticket-management-portal"
          rm: true                 # Remove target folder before copying (safe deploy)
          overwrite: false          # âœ… Fix Windows tar: disable --overwrite flag
          debug: true
          tar_exec: "tar"           # Optional: can set to "C:/Program Files/Git/usr/bin/tar.exe" if Git Bash is installed

      # Step 5: Run remote PowerShell deployment script
      - name: Run remote PowerShell deploy script (password auth)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST_PSBA_TICKETING }}
          username: ${{ secrets.SERVER_USER_PSBA_TICKETING }}
          password: ${{ secrets.SERVER_PASSWORD_PSBA_TICKETING }}
          port: 22
          script: |
            powershell -NoProfile -ExecutionPolicy Bypass -File "C:\github\ticketing-system\deploy_scripts\deploy.ps1" -env ${{ steps.env.outputs.env }}
